A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?




#solution

class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        self.m = m - 1
        self.n = n - 1
        self.visited = []
        return self.path(0, 0)
        
        
    def path(self, i, j):
        if i == self.m or j == self.n:
            return 1
        
        if (i, j) not in self.visited:
            self.visited[(i, j)] = self.path(i, j + 1) + self.path(i + 1, j)
        
        return self.visited[(i, j)]
        
        
