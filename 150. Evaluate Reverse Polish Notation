Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Note:

Division between two integers should truncate toward zero.
The given RPN expression is always valid. That means the expression would always evaluate to a result and there won't be any divide by zero operation.




class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        
        def calc(a, b, token):
        
            if token == '+':
                return a + b
            
            elif token == '-':
                return b - a
            
            elif token == '/':
                return int(b/a)
            
            return b*a
            

        stack = []
        for token in tokens:
            try:
                token = int(token)
                stack.append(token)
              
            
            except:
                
                a = stack.pop()
                b = stack.pop()
                
                a = calc(a, b, token)
                stack.append(a)
               
            
        return stack.pop()
        
